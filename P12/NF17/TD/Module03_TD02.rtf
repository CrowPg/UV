{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleSymbols;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 \ul \ulc0 Exercice 1\

\b0 \ulnone \
\ul H\'e9ritage exclusif : 
\i \ulnone g\'e9n\'e9ralement par les classes filles
\i0 \
\
Classe2 (#a, b, c, d) 
\i Note : c est une cl\'e9 candidate
\i0 \
Classe3 (#a, b, e, f) 
\i Note : e est une cl\'e9 candidate
\i0 \

\i Pas besoin de vue pour la classe m\'e8re car elle est abstraite. Si elle ne l'avait pas \'e9t\'e9, la vue aurait \'e9t\'e9 comme ceci : 
\i0 VueClasse1=(Proj(Classe2, a, b) 
\f1 \uc0\u8746 
\f0  (Proj(Classe3, a, b)).\
\
\
\ul H\'e9ritage complet :
\i \ulnone  g\'e9n\'e9ralement par la classe m\'e8re
\i0 \
\
Classe1(a, b, type : enum \{2, 3, 2 et 3, \'f8\}\

\i Le 'et' assure la non exclusivit\'e9 de l'h\'e9ritage.\
Il ne faut pas oublier les vues !!!\

\i0 VueClasse2 = Proj(Rest(Classe1, type=2 ou type=2et3), a, b)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 VueClasse3 = Proj(Rest(Classe1, type=3 ou type=2et3), a, b)\
\
\
\ul H\'e9ritage non exclusif et non complet avec une association entre les classes filles :\ulnone  
\i L\'e0 on pleure, sinon on peut aussi le faire par r\'e9f\'e9rence\

\i0 \
Classe1(#a, b)\
Classe2(#a=>Classe1(a), c, d) 
\i Note : c est une cl\'e9 candidate
\i0 \
Classe3(#a=>Classe1(a), e, f, classe2=>Classe2(a)) 
\i Note : e est une cl\'e9 candidate
\i0 \
VueClasse2Complete = Join(Classe1, Classe2, Classe1.a=Classe2.a)\
VueClasse3Complete = Join(Classe1, Classe3, Classe1.a=Classe3.a)\
\
\
\ul Association 1..1 : 1..1\
\
\ulnone Classe1(#a, b)\
Classe2(#c, d, a=>Classe1(a)) a UNIQUE NOT NULL 
\i Note : a est une cl\'e9 candidate, c serait alors UNIQUE NOT NULL
\i0 \
Proj(Classe1, a) 
\f1 \uc0\u8834 
\f0 Proj(Classe2, a)\
\
ou\
\
Classe(#a, b, c, d) c UNIQUE NOT NULL 
\i Note : c est une cl\'e9 candidate, a serait alors UNIQUE NOT NULL
\i0 \
\
\
\ul Association 0..1 : 1..1\ulnone \
\
Classe1(a, b, #c=>Classe2(c)) a UNIQUE NOT NULL\
Classe2(#c, d)\
\
\
\ul Association 0..1 : 0..1\
\
\ulnone Classe1(#a, b)\
Classe2(#c, d, a=>Classe1(a)) a UNIQUE\
\
\

\b \ul Exercice : Gestion de parc informatique
\b0 \ulnone \
\
Serveur (#serial : string, designation : string, HDD : float)\
PC (#serial : string, RAM : float, CPU : float, Imprimante=>Imprimante(serial) : string)\
Imprimante(#serial : string, designation ; string, reso : int)\
Connexsionpcs(#PC=>PC(serial) : string, #serveur=>serveur(serial) : string, quota : float)\
Contraintes : \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\uc0\u8259 	}un serveur est reli\'e9 au moins \'e0 2 pc ;\
{\listtext	\uc0\u8259 	}Proj(Imprimante, serial) 
\f1 \uc0\u8834  
\f0 Proj(PC, Imprimante) ;\
{\listtext	\uc0\u8259 	}quota compris entre 0 et 1 ;\
{\listtext	\uc0\u8259 	}la somme des quotas d'un serveur est inf\'e9rieure \'e0 1 ;\
{\listtext	\uc0\u8259 	}\'85\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\

\b \ul Exercice : Gestion du personnel\

\b0 \ulnone \
R = Rest(EMP, SAL+COM\uc0\u8805 10000)\
\
R = Proj(Rest(EMP, ENO=10), ENOM, PROF)\
\
R1 = Join(EMP, DEPT, EMP.DNO = DEPT.DNO) 
\i Notes : R1 a 2 DNO en attributs, typiquement les SGBD les renommeraient en leur ajoutant un chiffre, type DNO1, DNO2 ; impossible d'imposer VILLE = 'Paris' comme condition pour une jointure.
\i0 \
R2 = Rest(R1, VILLE='Paris')\
R3 = Proj(R2, ENOM)\
\
R1 = Rest(DEPT, DNOM='Commercial')\
R2 = Join(R1, EMP, R1.DIR=EMP.ENO)\
R3 = Proj(R2, ENOM)\
\
R1 = Join(DEPT, EMP, DEPT.DIR=EMP.ENO)\
R2 = Proj(R1, PROF)\
\
R1 = Rest(EMP, PROF='Ing\'e9nieur')\
R2 = Join(R1, DEPT, R1.ENO=DEPT.DIR)\
R3 = Proj(R2, ENOM)\
\

\b \ul \
Exercice : Inviter ses amis\
\

\i\b0 \ulnone Note : tout est cl\'e9.\

\i0 \
R1= Proj(REPAS, invit\'e9)\
\
R1 = Rest(REPAS, invit\'e9='Alice')\
R2 = Join(MENU, R1, MENU.date=R1.date)\
R3 = Proj(R2, plat)\
\
R1 = Join(MENU, PREFERENCE, MENU.plat=PREFERENCE.}